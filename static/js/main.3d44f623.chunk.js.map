{"version":3,"sources":["components/Section/Section.module.css","components/ContactsFilter/ContactsFilter.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","components/Form/Form.js","components/ContactList/ContactList.js","components/ContactsFilter/ContactsFilter.js","App.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","contacts","state","action","filter","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","Section","title","children","className","s","container","initialState","Form","useState","setState","useSelector","dispatch","useDispatch","nameId","numberId","handleChange","e","target","value","prev","addNoRepeatContact","some","toLowerCase","alert","onSubmit","preventDefault","form","htmlFor","label","type","onChange","pattern","required","input","button","ContactList","normalizedFilter","trim","contact","includes","getVisibleContacts","list","map","item","text","onClick","filterId","ContactsFilter","App","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d44f623.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3IVE-\",\"title\":\"Section_title__3lKxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__Z1Smb\",\"input\":\"ContactsFilter_input__syq5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3_6-y\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport { addContact, deleteContact, changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport contacts from 'data/contacts.json';\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\n\nconst items = createReducer(contacts, {\n  [addContact]: (state, action) => [action.payload, ...state],\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={s.container}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { useState } from 'react';\n\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import PropTypes from 'prop-types';\nimport s from './Form.module.css';\nimport { addContact } from 'redux/contacts/contacts-actions';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nfunction Form() {\n  const [state, setState] = useState(initialState);\n\n  const contacts = useSelector((state) => state.contacts.items);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n\n  const nameId = shortid.generate();\n  const numberId = shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const reset = () => {\n    setState((prev) => ({ ...prev, name: '', number: '' }));\n  };\n\n  const addNoRepeatContact = (state, contacts) => {\n    const { name, number } = state;\n    if (\n      contacts.some(\n        (contacts) => contacts.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.some((contacts) => contacts.number === number)) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    onSubmit(state);\n    reset();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addNoRepeatContact(state, contacts);\n  };\n\n  const { name, number } = state;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label htmlFor={nameId} className={s.label}>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            id={nameId}\n            className={s.input}\n          />\n        </label>\n        <label htmlFor={numberId} className={s.label}>\n          <span>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={numberId}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nimport { deleteContact } from 'redux/contacts/contacts-actions';\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  return contacts.filter(\n    (contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter) ||\n      contact.number.includes(filter),\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\n    getVisibleContacts(items, filter),\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <span className={s.text}>{name}:</span>\n          <span className={s.text}>{number}</span>\n\n          <button\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n            type=\"button\"\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  // contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport shortid from 'shortid';\n\nimport s from './ContactsFilter.module.css';\n\nimport { changeFilter } from 'redux/contacts/contacts-actions';\n\nconst filterId = shortid.generate();\n\nconst ContactsFilter = () => {\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  const onChangeFilter = (e) => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label htmlFor={filterId} className={s.label}>\n      <span>Filter contacts by name</span>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}\n        id={filterId}\n        className={s.input}\n      />\n    </label>\n  );\n};\n\nexport default ContactsFilter;\n","import React from 'react';\n\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport ContactsFilter from './components/ContactsFilter';\n\nimport s from './App.module.css';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <div className={s.container}>\n          <ContactsFilter />\n          <ContactList />\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__sJoGA\",\"label\":\"Form_label__1Vnbp\",\"input\":\"Form_input__1_Ht4\",\"button\":\"Form_button__3Jk49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3S8zn\",\"text\":\"ContactList_text__3IAYJ\",\"button\":\"ContactList_button__3CpKh\"};"],"sourceRoot":""}