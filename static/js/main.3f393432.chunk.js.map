{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/ContactsFilter/ContactsFilter.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/ContactList/ContactList.js","components/ContactsFilter/ContactsFilter.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","addContacts","createAsyncThunk","a","post","data","deleteContacts","delete","fetchContacts","get","items","createReducer","fulfilled","state","payload","_","filter","id","loading","pending","rejected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","Section","title","children","className","s","container","getContacts","getFilter","createSelector","contacts","contact","name","toLowerCase","includes","number","Form","useState","setContact","dispatch","useDispatch","nameId","shortid","generate","numberId","allContacts","useSelector","handleChange","e","target","value","prev","addNoRepeatContact","some","alert","onSubmit","preventDefault","form","htmlFor","label","type","onChange","pattern","required","input","button","ContactList","useEffect","list","map","phone","item","text","onClick","filterId","ContactsFilter","App","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f393432.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3S8zn\",\"text\":\"ContactList_text__3IAYJ\",\"button\":\"ContactList_button__3CpKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3IVE-\",\"title\":\"Section_title__3lKxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__Z1Smb\",\"input\":\"ContactsFilter_input__syq5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3_6-y\"};","// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n// const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n\r\n// const deleteContact = createAction('contacts/delete');\r\n\r\n// const changeFilter = createAction('contacts/changeFilter');\r\n\r\n// export { addContact, deleteContact, changeFilter };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://618e3e7c50e24d0017ce1176.mockapi.io/';\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async () => {\r\n    const data = await axios.post('/contacts');\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async () => {\r\n    const { data } = await axios.delete('/contacts/:id');\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const data = await axios.get('/contacts');\r\n    return data;\r\n  },\r\n);\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nimport {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './contacts-operations';\r\n\r\nconst items = createReducer([], {\r\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [deleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.rejected]: () => false,\r\n  [fetchContacts.fulfilled]: () => false,\r\n\r\n  [addContacts.pending]: () => true,\r\n  [addContacts.rejected]: () => false,\r\n  [addContacts.fulfilled]: () => false,\r\n\r\n  [deleteContacts.pending]: () => true,\r\n  [deleteContacts.rejected]: () => false,\r\n  [deleteContacts.fulfilled]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { logger } from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  middleware,\r\n  devTools: true,\r\n});\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//   },\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={s.container}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\n//contacts\r\nexport const getContacts = (state) => state.items;\r\n//filter\r\nexport const getFilter = (state) => state.filter;\r\n//loading\r\nexport const getLoading = (state) => state.loading;\r\n\r\nexport const getFilterContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .includes(filter.toLowerCase() || contact.number.includes(filter)),\r\n    ),\r\n);\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport shortid from 'shortid';\n\nimport s from './Form.module.css';\n\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { addContacts } from '../../redux/contacts/contacts-operations';\n\nfunction Form() {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n\n  const [contact, setContact] = useState(initialState);\n\n  const dispatch = useDispatch();\n  const onSubmit = (contact) => dispatch(addContacts(contact));\n\n  const nameId = shortid.generate();\n  const numberId = shortid.generate();\n  const allContacts = useSelector((state) => getContacts(state));\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setContact((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const reset = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  const addNoRepeatContact = (state, contacts) => {\n    const { name, number } = state;\n    if (\n      contacts.some(\n        (contacts) => contacts.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.some((contacts) => contacts.number === number)) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    onSubmit(state);\n    reset();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addNoRepeatContact(contact, allContacts);\n  };\n\n  const { name, number } = contact;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label htmlFor={nameId} className={s.label}>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            id={nameId}\n            className={s.input}\n          />\n        </label>\n        <label htmlFor={numberId} className={s.label}>\n          <span>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={numberId}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nimport {\r\n  deleteContacts,\r\n  fetchContacts,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li key={id} className={s.item}>\r\n          <span className={s.text}>{name}:</span>\r\n          <span className={s.text}>{phone}</span>\r\n\r\n          <button\r\n            onClick={() => {\r\n              dispatch(deleteContacts(id));\r\n            }}\r\n            type=\"button\"\r\n            className={s.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport shortid from 'shortid';\n\nimport s from './ContactsFilter.module.css';\n\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nconst filterId = shortid.generate();\n\nconst ContactsFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = (e) => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label htmlFor={filterId} className={s.label}>\n      <span>Filter contacts by name</span>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}\n        id={filterId}\n        className={s.input}\n      />\n    </label>\n  );\n};\n\nexport default ContactsFilter;\n","import React from 'react';\n\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport ContactsFilter from './components/ContactsFilter';\n\nimport s from './App.module.css';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <div className={s.container}>\n          <ContactsFilter />\n          <ContactList />\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__sJoGA\",\"label\":\"Form_label__1Vnbp\",\"input\":\"Form_input__1_Ht4\",\"button\":\"Form_button__3Jk49\"};"],"sourceRoot":""}